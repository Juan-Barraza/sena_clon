# Generated by Django 5.0.6 on 2024-05-14 02:41

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import sena_genius.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('requisitos', models.TextField(verbose_name='Requisitos')),
                ('fecha_inicio', models.DateField(verbose_name='Fecha de inicio')),
                ('categoria', models.CharField(choices=[('Técnico', 'Técnico'), ('Tecnológico', 'Tecnológico'), ('Especialización', 'Especialización'), ('Complementario', 'Complementario')], max_length=50, verbose_name='Categoría')),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('genero', models.CharField(blank=True, choices=[('Masculino', 'Masculino'), ('Femenino', 'Femenino'), ('No binario', 'No binario')], max_length=20, null=True, verbose_name='Género')),
                ('estrato_socioeconomico', models.CharField(blank=True, choices=[('1', 'Uno'), ('2', 'Dos'), ('3', 'Tres'), ('4', 'Cuatro'), ('5', 'Cinco'), ('6', 'Seis')], max_length=1, null=True, verbose_name='Estrato socioeconómico')),
                ('tipo_usuario', models.CharField(blank=True, choices=[('Estudiante', 'Estudiante'), ('Profesor', 'Profesor'), ('Administrador', 'Administrador')], default='Estudiante', max_length=20, null=True, verbose_name='Tipo de usuario')),
                ('nombre', models.CharField(blank=True, max_length=150, null=True, verbose_name='Nombre')),
                ('primer_apellido', models.CharField(blank=True, max_length=150, null=True, verbose_name='Primer apellido')),
                ('segundo_apellido', models.CharField(blank=True, max_length=150, null=True, verbose_name='Segundo apellido')),
                ('documento_tipo', models.CharField(blank=True, choices=[('CC', 'Cédula de Ciudadanía'), ('CE', 'Cédula de Extranjería'), ('TI', 'Tarjeta de Identidad'), ('PP', 'Permiso especial de permanencia'), ('PT', 'Permiso por Protección Temporal')], max_length=50, null=True, verbose_name='Tipo de documento')),
                ('documento_numero', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Número de documento')),
                ('documento_archivo', models.FileField(blank=True, null=True, upload_to='documentos/', verbose_name='Archivo de documento')),
                ('pais_expedicion', django_countries.fields.CountryField(blank=True, max_length=2, null=True, verbose_name='País de expedición')),
                ('departamento_expedicion', models.CharField(blank=True, choices=[('Amazonas', 'Amazonas'), ('Antioquia', 'Antioquia'), ('Arauca', 'Arauca'), ('Atlántico', 'Atlántico'), ('Bogotá, D.C.', 'Bogotá, D.C.'), ('Bolívar', 'Bolívar'), ('Boyacá', 'Boyacá'), ('Caldas', 'Caldas'), ('Caquetá', 'Caquetá'), ('Casanare', 'Casanare'), ('Cauca', 'Cauca'), ('Cesar', 'Cesar'), ('Chocó', 'Chocó'), ('Córdoba', 'Córdoba'), ('Cundinamarca', 'Cundinamarca'), ('Guainía', 'Guainía'), ('Guaviare', 'Guaviare'), ('Huila', 'Huila'), ('La Guajira', 'La Guajira'), ('Magdalena', 'Magdalena'), ('Meta', 'Meta'), ('Nariño', 'Nariño'), ('Norte de Santander', 'Norte de Santander'), ('Putumayo', 'Putumayo'), ('Quindío', 'Quindío'), ('Risaralda', 'Risaralda'), ('San Andrés y Providencia', 'San Andrés y Providencia'), ('Santander', 'Santander'), ('Sucre', 'Sucre'), ('Tolima', 'Tolima'), ('Valle del Cauca', 'Valle del Cauca'), ('Vaupés', 'Vaupés'), ('Vichada', 'Vichada')], max_length=50, null=True, verbose_name='Departamento de expedición')),
                ('municipio_expedicion', models.CharField(blank=True, max_length=100, null=True, verbose_name='Municipio de expedición')),
                ('fecha_expedicion', models.DateField(blank=True, null=True, verbose_name='Fecha de expedición')),
                ('fecha_vencimiento', models.DateField(blank=True, null=True, verbose_name='Fecha de vencimiento')),
                ('pais_nacimiento', django_countries.fields.CountryField(blank=True, max_length=2, null=True, verbose_name='País de nacimiento')),
                ('departamento_nacimiento', models.CharField(blank=True, choices=[('Amazonas', 'Amazonas'), ('Antioquia', 'Antioquia'), ('Arauca', 'Arauca'), ('Atlántico', 'Atlántico'), ('Bogotá, D.C.', 'Bogotá, D.C.'), ('Bolívar', 'Bolívar'), ('Boyacá', 'Boyacá'), ('Caldas', 'Caldas'), ('Caquetá', 'Caquetá'), ('Casanare', 'Casanare'), ('Cauca', 'Cauca'), ('Cesar', 'Cesar'), ('Chocó', 'Chocó'), ('Córdoba', 'Córdoba'), ('Cundinamarca', 'Cundinamarca'), ('Guainía', 'Guainía'), ('Guaviare', 'Guaviare'), ('Huila', 'Huila'), ('La Guajira', 'La Guajira'), ('Magdalena', 'Magdalena'), ('Meta', 'Meta'), ('Nariño', 'Nariño'), ('Norte de Santander', 'Norte de Santander'), ('Putumayo', 'Putumayo'), ('Quindío', 'Quindío'), ('Risaralda', 'Risaralda'), ('San Andrés y Providencia', 'San Andrés y Providencia'), ('Santander', 'Santander'), ('Sucre', 'Sucre'), ('Tolima', 'Tolima'), ('Valle del Cauca', 'Valle del Cauca'), ('Vaupés', 'Vaupés'), ('Vichada', 'Vichada')], max_length=50, null=True, verbose_name='Departamento de nacimiento')),
                ('municipio_nacimiento', models.CharField(blank=True, max_length=100, null=True, verbose_name='Municipio de nacimiento')),
                ('fecha_nacimiento', models.DateField(blank=True, null=True, verbose_name='Fecha de nacimiento')),
                ('pais_residencia', django_countries.fields.CountryField(blank=True, max_length=2, null=True, verbose_name='País de residencia')),
                ('departamento_residencia', models.CharField(blank=True, choices=[('Amazonas', 'Amazonas'), ('Antioquia', 'Antioquia'), ('Arauca', 'Arauca'), ('Atlántico', 'Atlántico'), ('Bogotá, D.C.', 'Bogotá, D.C.'), ('Bolívar', 'Bolívar'), ('Boyacá', 'Boyacá'), ('Caldas', 'Caldas'), ('Caquetá', 'Caquetá'), ('Casanare', 'Casanare'), ('Cauca', 'Cauca'), ('Cesar', 'Cesar'), ('Chocó', 'Chocó'), ('Córdoba', 'Córdoba'), ('Cundinamarca', 'Cundinamarca'), ('Guainía', 'Guainía'), ('Guaviare', 'Guaviare'), ('Huila', 'Huila'), ('La Guajira', 'La Guajira'), ('Magdalena', 'Magdalena'), ('Meta', 'Meta'), ('Nariño', 'Nariño'), ('Norte de Santander', 'Norte de Santander'), ('Putumayo', 'Putumayo'), ('Quindío', 'Quindío'), ('Risaralda', 'Risaralda'), ('San Andrés y Providencia', 'San Andrés y Providencia'), ('Santander', 'Santander'), ('Sucre', 'Sucre'), ('Tolima', 'Tolima'), ('Valle del Cauca', 'Valle del Cauca'), ('Vaupés', 'Vaupés'), ('Vichada', 'Vichada')], max_length=50, null=True, verbose_name='Departamento de residencia')),
                ('municipio_residencia', models.CharField(blank=True, max_length=100, null=True, verbose_name='Municipio de residencia')),
                ('telefono_personal', models.CharField(blank=True, max_length=15, null=True, verbose_name='Teléfono personal')),
                ('telefono_movil', models.CharField(blank=True, max_length=15, null=True, verbose_name='Teléfono móvil')),
                ('contacto_nombre', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nombre de contacto')),
                ('contacto_telefono', models.CharField(blank=True, max_length=15, null=True, verbose_name='Teléfono de contacto')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', sena_genius.managers.UsuarioManager()),
            ],
        ),
        migrations.CreateModel(
            name='Inscripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inscripcion', models.DateField(auto_now_add=True, verbose_name='Fecha de inscripción')),
                ('estado', models.CharField(choices=[('Pendiente', 'Pendiente'), ('Aceptado', 'Aceptado'), ('Completado', 'Completado')], default='pendiente', max_length=20, verbose_name='Estado')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscritos', to='sena_genius.curso', verbose_name='Curso')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscripciones', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
        ),
    ]
